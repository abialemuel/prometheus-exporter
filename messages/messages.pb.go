// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: messages.proto

package interfaces

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The public message, for example, a message that is sent to all clients.
type PublicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message,omitempty"`          
	LastUpdated string `protobuf:"bytes,2,opt,name=LastUpdated,proto3" json:"lastUpdated,omitempty"`  
}

func (x *PublicMsg) Reset() {
	*x = PublicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicMsg) ProtoMessage() {}

func (x *PublicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicMsg.ProtoReflect.Descriptor instead.
func (*PublicMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *PublicMsg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PublicMsg) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

type CollectDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exporter string `protobuf:"bytes,1,opt,name=Exporter,proto3" json:"exporter,omitempty"`  
	Module   string `protobuf:"bytes,2,opt,name=Module,proto3" json:"module,omitempty"`      
	Target   string `protobuf:"bytes,3,opt,name=Target,proto3" json:"target,omitempty"`      
}

func (x *CollectDataMsg) Reset() {
	*x = CollectDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectDataMsg) ProtoMessage() {}

func (x *CollectDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectDataMsg.ProtoReflect.Descriptor instead.
func (*CollectDataMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CollectDataMsg) GetExporter() string {
	if x != nil {
		return x.Exporter
	}
	return ""
}

func (x *CollectDataMsg) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *CollectDataMsg) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"name,omitempty"`                                                                                              
	Config map[string]string `protobuf:"bytes,2,rep,name=Config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`  
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type NodeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       int32  `protobuf:"varint,1,opt,name=Version,proto3" json:"version,omitempty"`             
	Community     string `protobuf:"bytes,2,opt,name=Community,proto3" json:"community,omitempty"`          
	SecurityLevel string `protobuf:"bytes,3,opt,name=SecurityLevel,proto3" json:"securityLevel,omitempty"`  
	Username      string `protobuf:"bytes,4,opt,name=Username,proto3" json:"username,omitempty"`            
	Password      string `protobuf:"bytes,5,opt,name=Password,proto3" json:"password,omitempty"`            
	AuthProtocol  string `protobuf:"bytes,6,opt,name=AuthProtocol,proto3" json:"authProtocol,omitempty"`    
	PrivProtocol  string `protobuf:"bytes,7,opt,name=PrivProtocol,proto3" json:"privProtocol,omitempty"`    
	PrivPassword  string `protobuf:"bytes,8,opt,name=PrivPassword,proto3" json:"privPassword,omitempty"`    
	ContextName   string `protobuf:"bytes,9,opt,name=ContextName,proto3" json:"contextName,omitempty"`      
	Timeout       int32  `protobuf:"varint,10,opt,name=Timeout,proto3" json:"timeout,omitempty"`            
}

func (x *NodeConfig) Reset() {
	*x = NodeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfig) ProtoMessage() {}

func (x *NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfig.ProtoReflect.Descriptor instead.
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *NodeConfig) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *NodeConfig) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *NodeConfig) GetSecurityLevel() string {
	if x != nil {
		return x.SecurityLevel
	}
	return ""
}

func (x *NodeConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *NodeConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *NodeConfig) GetAuthProtocol() string {
	if x != nil {
		return x.AuthProtocol
	}
	return ""
}

func (x *NodeConfig) GetPrivProtocol() string {
	if x != nil {
		return x.PrivProtocol
	}
	return ""
}

func (x *NodeConfig) GetPrivPassword() string {
	if x != nil {
		return x.PrivPassword
	}
	return ""
}

func (x *NodeConfig) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *NodeConfig) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Authorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"username,omitempty"`  
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"password,omitempty"`  
}

func (x *Authorization) Reset() {
	*x = Authorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorization) ProtoMessage() {}

func (x *Authorization) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorization.ProtoReflect.Descriptor instead.
func (*Authorization) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Authorization) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Authorization) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WebsiteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method        string            `protobuf:"bytes,1,opt,name=Method,proto3" json:"method,omitempty"`                                                                                            
	Authorization *Authorization    `protobuf:"bytes,2,opt,name=Authorization,proto3" json:"authorization,omitempty"`                                                                              
	Headers       map[string]string `protobuf:"bytes,3,rep,name=Headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`  
	Body          string            `protobuf:"bytes,4,opt,name=Body,proto3" json:"body,omitempty"`                                                                                                
}

func (x *WebsiteConfig) Reset() {
	*x = WebsiteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteConfig) ProtoMessage() {}

func (x *WebsiteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteConfig.ProtoReflect.Descriptor instead.
func (*WebsiteConfig) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *WebsiteConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *WebsiteConfig) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *WebsiteConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *WebsiteConfig) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ICMPQOSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketSize int32 `protobuf:"varint,1,opt,name=PacketSize,proto3" json:"PacketSize,omitempty"` //gotags: json:"packet_size,omitempty"
	Interval   int32 `protobuf:"varint,2,opt,name=Interval,proto3" json:"Interval,omitempty"`     //gotags: json:"interval,omitempty"
	Count      int32 `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`           //gotags: json:"count,omitempty"
	Timeout    int32 `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`       //gotags: json:"timeout,omitempty"
}

func (x *ICMPQOSConfig) Reset() {
	*x = ICMPQOSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICMPQOSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICMPQOSConfig) ProtoMessage() {}

func (x *ICMPQOSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICMPQOSConfig.ProtoReflect.Descriptor instead.
func (*ICMPQOSConfig) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ICMPQOSConfig) GetPacketSize() int32 {
	if x != nil {
		return x.PacketSize
	}
	return 0
}

func (x *ICMPQOSConfig) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *ICMPQOSConfig) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ICMPQOSConfig) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type WorkerProbe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProbeId              string    `protobuf:"bytes,1,opt,name=ProbeId,proto3" json:"probeId,omitempty"`                            
	CostumerId           string    `protobuf:"bytes,2,opt,name=CostumerId,proto3" json:"costumerId,omitempty"`                      
	UserGroupInventoryId string    `protobuf:"bytes,3,opt,name=UserGroupInventoryId,proto3" json:"userGroupInventoryId,omitempty"`  
	NodeId               string    `protobuf:"bytes,4,opt,name=NodeId,proto3" json:"nodeId,omitempty"`                              
	Ip                   string    `protobuf:"bytes,5,opt,name=Ip,proto3" json:"ip,omitempty"`                                      
	Interval             int32     `protobuf:"varint,6,opt,name=Interval,proto3" json:"interval,omitempty"`                         
	Modules              []*Module `protobuf:"bytes,7,rep,name=Modules,proto3" json:"modules,omitempty"`                            
	 
	//
	// Types that are assignable to ProbeConfig:
	//
	//	*WorkerProbe_Node
	//	*WorkerProbe_Website
	//	*WorkerProbe_ICMPQOS
	ProbeConfig isWorkerProbe_ProbeConfig `protobuf_oneof:"ProbeConfig" json:"probe_config,omitempty"`
	LastUpdated int64                     `protobuf:"varint,11,opt,name=LastUpdated,proto3" json:"lastUpdated,omitempty"`  
}

func (x *WorkerProbe) Reset() {
	*x = WorkerProbe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerProbe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerProbe) ProtoMessage() {}

func (x *WorkerProbe) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerProbe.ProtoReflect.Descriptor instead.
func (*WorkerProbe) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *WorkerProbe) GetProbeId() string {
	if x != nil {
		return x.ProbeId
	}
	return ""
}

func (x *WorkerProbe) GetCostumerId() string {
	if x != nil {
		return x.CostumerId
	}
	return ""
}

func (x *WorkerProbe) GetUserGroupInventoryId() string {
	if x != nil {
		return x.UserGroupInventoryId
	}
	return ""
}

func (x *WorkerProbe) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *WorkerProbe) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WorkerProbe) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *WorkerProbe) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (m *WorkerProbe) GetProbeConfig() isWorkerProbe_ProbeConfig {
	if m != nil {
		return m.ProbeConfig
	}
	return nil
}

func (x *WorkerProbe) GetNode() *NodeConfig {
	if x, ok := x.GetProbeConfig().(*WorkerProbe_Node); ok {
		return x.Node
	}
	return nil
}

func (x *WorkerProbe) GetWebsite() *WebsiteConfig {
	if x, ok := x.GetProbeConfig().(*WorkerProbe_Website); ok {
		return x.Website
	}
	return nil
}

func (x *WorkerProbe) GetICMPQOS() *ICMPQOSConfig {
	if x, ok := x.GetProbeConfig().(*WorkerProbe_ICMPQOS); ok {
		return x.ICMPQOS
	}
	return nil
}

func (x *WorkerProbe) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

type isWorkerProbe_ProbeConfig interface {
	isWorkerProbe_ProbeConfig()
}

type WorkerProbe_Node struct {
	Node *NodeConfig `protobuf:"bytes,8,opt,name=Node,proto3,oneof" json:"node,omitempty"`  
}

type WorkerProbe_Website struct {
	Website *WebsiteConfig `protobuf:"bytes,9,opt,name=Website,proto3,oneof" json:"website,omitempty"`  
}

type WorkerProbe_ICMPQOS struct {
	ICMPQOS *ICMPQOSConfig `protobuf:"bytes,10,opt,name=ICMPQOS,proto3,oneof" json:"icmpQos,omitempty"`  
}

func (*WorkerProbe_Node) isWorkerProbe_ProbeConfig() {}

func (*WorkerProbe_Website) isWorkerProbe_ProbeConfig() {}

func (*WorkerProbe_ICMPQOS) isWorkerProbe_ProbeConfig() {}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x09,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xca, 0x02, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x47, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x0d,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x3a, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x0d, 0x49, 0x43, 0x4d, 0x50,
	0x51, 0x4f, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xba, 0x03, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x49, 0x43,
	0x4d, 0x50, 0x51, 0x4f, 0x53, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x43, 0x4d, 0x50, 0x51, 0x4f, 0x53,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x49, 0x43, 0x4d, 0x50, 0x51, 0x4f,
	0x53, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x69, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x6b, 0x6f, 0x6d,
	0x2d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x64, 0x70, 0x65, 0x2f, 0x73, 0x74, 0x64,
	0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x2f, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x6e, 0x6b, 0x2f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x3b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_messages_proto_goTypes = []interface{}{
	(*PublicMsg)(nil),      // 0: interfaces.PublicMsg
	(*CollectDataMsg)(nil), // 1: interfaces.CollectDataMsg
	(*Module)(nil),         // 2: interfaces.Module
	(*NodeConfig)(nil),     // 3: interfaces.NodeConfig
	(*Authorization)(nil),  // 4: interfaces.Authorization
	(*WebsiteConfig)(nil),  // 5: interfaces.WebsiteConfig
	(*ICMPQOSConfig)(nil),  // 6: interfaces.ICMPQOSConfig
	(*WorkerProbe)(nil),    // 7: interfaces.WorkerProbe
	nil,                    // 8: interfaces.Module.ConfigEntry
	nil,                    // 9: interfaces.WebsiteConfig.HeadersEntry
}
var file_messages_proto_depIdxs = []int32{
	8, // 0: interfaces.Module.Config:type_name -> interfaces.Module.ConfigEntry
	4, // 1: interfaces.WebsiteConfig.Authorization:type_name -> interfaces.Authorization
	9, // 2: interfaces.WebsiteConfig.Headers:type_name -> interfaces.WebsiteConfig.HeadersEntry
	2, // 3: interfaces.WorkerProbe.Modules:type_name -> interfaces.Module
	3, // 4: interfaces.WorkerProbe.Node:type_name -> interfaces.NodeConfig
	5, // 5: interfaces.WorkerProbe.Website:type_name -> interfaces.WebsiteConfig
	6, // 6: interfaces.WorkerProbe.ICMPQOS:type_name -> interfaces.ICMPQOSConfig
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICMPQOSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerProbe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*WorkerProbe_Node)(nil),
		(*WorkerProbe_Website)(nil),
		(*WorkerProbe_ICMPQOS)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
